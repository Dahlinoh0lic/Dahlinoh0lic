<?php
    session_start(); // Start session

    // Check if UID is set in the session (retrieved from login.php)
    if (isset($_SESSION['UID'])) {
        $UID = $_SESSION['UID']; // Retrieve UID
    
    // Check if points are set in the session (retrieved from contribution.php)
    if (isset($_SESSION['points'])) {
        $points = $_SESSION['points']; // Retrieve points

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Form</title>
    <style>
        /* Add your preferred styling here */
        /* For demonstration purposes, I'll keep it minimal */
        body {
            font-family: Arial, sans-serif;
        }
        .payment-form {
            max-width: 600px; /* Increase max-width for longer border */
            margin: 0 auto;
            padding: 40px; /* Increase padding to create space between content and border */
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .form-input {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }
        .submit-btn {
            background-color: #4CAF50;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 3px;
            cursor: pointer;
            display: block;
            margin: 0 auto; /* Center align horizontally */
            text-decoration: none;
            text-align: center;
        }
        .payment-form h2 {
            text-align: center; /* Align center */
        }
    </style>
    
</head>
<body>
    <div class="payment-form">
        <h2>Payment Details</h2>
        <form id="paymentForm" action="#" method="post">
            <label for="firstName">First Name:</label>
            <input type="text" id="firstName" name="firstName" class="form-input" required title="Please enter alphabetic characters only">

            <label for="lastName">Last Name:</label>
            <input type="text" id="lastName" name="lastName" class="form-input" required title="Please enter alphabetic characters only">

            <label for="cardNumber">Credit Card Number:</label>
            <input type="text" id="cardNumber" name="cardNumber" class="form-input" required maxlength="19" pattern="(?:\d{4}[ -]?){4}\d{4}" title="Please enter a valid credit card number">

            <label for="securityCode">Security Code (CVC):</label>
            <input type="text" id="securityCode" name="securityCode" class="form-input" required minlength="3" maxlength="4" pattern="\d+" title="Please enter a valid security code (CVC)">

            <label for="expirationDate">Card Expiration (MM / YY):</label>
            <input type="text" id="expirationDate" name="expirationDate" class="form-input" required pattern="(0[1-9]|1[0-2])\/(0[0-9]|[1-9][0-9])" title="Please enter a valid expiration date in the format MM/YY" maxlength="5">
            

            <a href="assignment done payment.php" class="submit-btn">Donate</a>
        </form>
    </div>

    <script>
        document.getElementById('paymentForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent form submission

            let isValid = true; // Flag to track form validity

            // Get input values
            const cardNumber = document.getElementById('cardNumber').value.replace(/[ -]/g, ''); // Remove spaces and dashes
            const securityCode = document.getElementById('securityCode').value.trim();
            const expirationDate = document.getElementById('expirationDate').value.trim();

            // Validate credit card number
            if (cardNumber.length !== 16) {
                alert('Credit card number must be exactly 16 digits long.');
                isValid = false; // Set flag to false
            }

            // Validate security code (CVC)
            if (!/^\d{3,4}$/.test(securityCode)) {
                alert('Security code (CVC) must be between 3 and 4 digits long and contain only numbers.');
                isValid = false; // Set flag to false
            }

            // Validate expiration date format
            if (!/^0[1-9]|1[0-2]\/(0[0-9]|[1-9][0-9])$/.test(expirationDate)) {
                alert('Please enter a valid expiration date in the format MM/YY.');
                isValid = false; // Set flag to false
            }

            // Submit the form if all validations pass
            if (isValid) {
                // Show success message
                alert('Donation successful!');

                // Submit the form
                this.submit();
            }
        });

        // JavaScript to format the credit card number with spaces after every four digits
        document.getElementById('cardNumber').addEventListener('input', function (e) {
            let value = e.target.value.replace(/[^\d]/g, ''); // Remove non-numeric characters
            value = value.substring(0, 16); // Limit to 16 digits
            value = value.replace(/(.{4})/g, '$1 ').trim(); // Add space after every 4 digits
            e.target.value = value;
        });

        // JavaScript to automatically add slash (/) to expiration date after entering two digits for the month
        document.getElementById('expirationDate').addEventListener('input', function (e) {
            let value = e.target.value.replace(/\D/g, ''); // Remove non-numeric characters
            if (value.length > 2) {
                value = value.substring(0, 2) + '/' + value.substring(2); // Add slash after two digits
            }
            e.target.value = value;
        });

        // JavaScript to prevent typing numbers in first name and last name fields
        document.getElementById('firstName').addEventListener('input', function(e) {
            e.target.value = e.target.value.replace(/\d/g, ''); // Remove numbers
        });

        document.getElementById('lastName').addEventListener('input', function(e) {
            e.target.value = e.target.value.replace(/\d/g, ''); // Remove numbers
        });

        // JavaScript to restrict security code (CVC) input to accept only numeric values
        document.getElementById('securityCode').addEventListener('input', function (e) {
            e.target.value = e.target.value.replace(/\D/g, ''); // Remove non-numeric characters
        });

        // JavaScript to restrict the month (MM) input to accept only values from 01 to 12
        document.getElementById('expirationDate').addEventListener('input', function (e) {
            const value = e.target.value;
            const month = value.substring(0, 2); // Extract the month part
            if (parseInt(month) > 12) {
                e.target.value = '12' + value.substring(2); // Set month to 12 if greater than 12
            }
        });
    </script>

</body>
</html>

<?php
// Connect to the database
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "assignment";

$conn = new mysqli($servername, $username, $password, $dbname);

if ($conn->connect_error) {
    die("Connection failed: " . $conn->connect_error);
}

// Update points in userdatabase
$updateQuery = "UPDATE userdatabase SET Points = Points + $points WHERE UID = '$UID'";
if ($conn->query($updateQuery) === TRUE) {
    // Points updated successfully
} else {
    echo "Error updating points: " . $conn->error;
}

// Close connection
$conn->close();

} else {
            echo "Points not found in session.";
        }
    } else {
        echo "UID not found in session.";
    }
?>

